<?php
/**
 * MerchantActivityModifyVoucherInfo
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * 支付宝开放平台API
 *
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 2024-04-28
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.2.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Alipay\OpenAPISDK\Model;

use \ArrayAccess;
use \Alipay\OpenAPISDK\ObjectSerializer;

/**
 * MerchantActivityModifyVoucherInfo Class Doc Comment
 *
 * @category Class
 * @package  Alipay\OpenAPISDK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class MerchantActivityModifyVoucherInfo implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'MerchantActivityModifyVoucherInfo';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'logo' => 'string',
        'userIntroductions' => 'string',
        'validDaysRangeTo' => 'int',
        'validTimeRangeTo' => 'string',
        'validTimeType' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'logo' => null,
        'userIntroductions' => null,
        'validDaysRangeTo' => null,
        'validTimeRangeTo' => null,
        'validTimeType' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'logo' => 'logo',
        'userIntroductions' => 'user_introductions',
        'validDaysRangeTo' => 'valid_days_range_to',
        'validTimeRangeTo' => 'valid_time_range_to',
        'validTimeType' => 'valid_time_type'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'logo' => 'setLogo',
        'userIntroductions' => 'setUserIntroductions',
        'validDaysRangeTo' => 'setValidDaysRangeTo',
        'validTimeRangeTo' => 'setValidTimeRangeTo',
        'validTimeType' => 'setValidTimeType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'logo' => 'getLogo',
        'userIntroductions' => 'getUserIntroductions',
        'validDaysRangeTo' => 'getValidDaysRangeTo',
        'validTimeRangeTo' => 'getValidTimeRangeTo',
        'validTimeType' => 'getValidTimeType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['logo'] = $data['logo'] ?? null;
        $this->container['userIntroductions'] = $data['userIntroductions'] ?? null;
        $this->container['validDaysRangeTo'] = $data['validDaysRangeTo'] ?? null;
        $this->container['validTimeRangeTo'] = $data['validTimeRangeTo'] ?? null;
        $this->container['validTimeType'] = $data['validTimeType'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets logo
     *
     * @return string|null
     */
    public function getLogo()
    {
        return $this->container['logo'];
    }

    /**
     * Sets logo
     *
     * @param string|null $logo 券logo  券logo最大字符数不能超过64
     *
     * @return self
     */
    public function setLogo($logo)
    {
        $this->container['logo'] = $logo;

        return $this;
    }

    /**
     * Gets userIntroductions
     *
     * @return string|null
     */
    public function getUserIntroductions()
    {
        return $this->container['userIntroductions'];
    }

    /**
     * Sets userIntroductions
     *
     * @param string|null $userIntroductions 使用须知  券使用须知最大字符数不能超过256
     *
     * @return self
     */
    public function setUserIntroductions($userIntroductions)
    {
        $this->container['userIntroductions'] = $userIntroductions;

        return $this;
    }

    /**
     * Gets validDaysRangeTo
     *
     * @return int|null
     */
    public function getValidDaysRangeTo()
    {
        return $this->container['validDaysRangeTo'];
    }

    /**
     * Sets validDaysRangeTo
     *
     * @param int|null $validDaysRangeTo 领取后, 第几天失效  valid_time_type=RELATIVE时有效且必填  只允许增加领取后可用天数
     *
     * @return self
     */
    public function setValidDaysRangeTo($validDaysRangeTo)
    {
        $this->container['validDaysRangeTo'] = $validDaysRangeTo;

        return $this;
    }

    /**
     * Gets validTimeRangeTo
     *
     * @return string|null
     */
    public function getValidTimeRangeTo()
    {
        return $this->container['validTimeRangeTo'];
    }

    /**
     * Sets validTimeRangeTo
     *
     * @param string|null $validTimeRangeTo 有效期截止时间  valid_time_type=FIXED时有效且必填  券有效结束时间格式必须为yyyy-MM-dd HH:mm:ss  只允许延长固定时间的结束时间（支持到分）
     *
     * @return self
     */
    public function setValidTimeRangeTo($validTimeRangeTo)
    {
        $this->container['validTimeRangeTo'] = $validTimeRangeTo;

        return $this;
    }

    /**
     * Gets validTimeType
     *
     * @return string|null
     */
    public function getValidTimeType()
    {
        return $this->container['validTimeType'];
    }

    /**
     * Sets validTimeType
     *
     * @param string|null $validTimeType 有效期类型：  枚举值：RELATIVE/FIXED
     *
     * @return self
     */
    public function setValidTimeType($validTimeType)
    {
        $this->container['validTimeType'] = $validTimeType;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


